<import name="card_title" src="../common/component/card_title/card_title.ux"></import>

<import name="card_bottom_3" src="../common/component/card_bottom_3/card_bottom_3.ux"></import>
<template>
    <div class="newsandinformationtype_box" widgetid="fd112a16-ed5d-4e4c-b068-87dd80bd27c2">
        <card_title title="{{$t('message.title')}}" ></card_title>
        <div class="newsandinformationtype_content_box">
             <progress type="circular" show="{{isDataFetching}}" />
                <div class="{{dividings[$idx]}} newsandinformationtype_item_box"  for="{{petData}}">
                    <div onclick="mainDivClick({{$item.petName}})" style="flex-direction: column;flex:1;align-self: flex-end;">
                        <div style="flex: 1;align-items: flex-start;">
                            <text id="txtTitle" class="newsandinformationtype_textSizeBody2 newsandinformationtype_textColorPrimary
                             newsandinformationtype_textMedium newsandinformationtype_lineTwo
                              newsandinformationtype_marginVerticalM">{{$item.petName}}</text>
                        </div>
                        <text class="newsandinformationtype_textColorTertiary newsandinformationtype_textSizeCaption">Last location: {{$item.lastLocation}}</text>
                        <text class="newsandinformationtype_textColorTertiary newsandinformationtype_textSizeCaption">Outside Safezone: {{$item.zoneStatus}}</text>
                    </div>
                    <image onclick="imgClick({{$item.petName}})" id="imgmap" src="{{$item.url}}" 
                    class="newsandinformationtype_img newsandinformationtype_marginHorizontalL"></image>
                </div>

            
        </div>
        <card_bottom_3 onclick="showApp" button-array="{{$t('message.buttonArray')}}"></card_bottom_3>
    </div>
</template>
<style lang="sass">
    @import "../common/css/basic.scss";

    .newsandinformationtype_box {
        flex-direction: column;
        padding: dpConvert(0) dpConvert($elementsMarginHorizontalL) dpConvert(0) dpConvert($elementsMarginHorizontalL);
    }

    .newsandinformationtype_content_box {
        flex-direction: column;
    }

    .newsandinformationtype_dividing {
        border-bottom-color: $color10;
        border-bottom-width: 1px;
    }

    .newsandinformationtype_item_box {
        padding: dpConvert(12) dpConvert(0) dpConvert(12) dpConvert(0);
    }

    .newsandinformationtype_img {
        width: dpConvert(96);
        height: dpConvert(64);
        border-radius: dpConvert(4);
    }

    .newsandinformationtype_textColorPrimary {
        color: $textColorPrimary;
    }

    .newsandinformationtype_textColorTertiary {
        color: $textColorTertiary;
    }

    .newsandinformationtype_textSizeBody2 {
        font-size: dpConvert(24);
    }

    .newsandinformationtype_textSizeCaption {
        font-size: dpConvert(14);
    }

    .newsandinformationtype_textMedium {
        font-weight: 500;
    }

    .newsandinformationtype_marginVerticalM {
        margin-bottom: dpConvert($elementsMarginVerticalM);
    }

    .newsandinformationtype_marginHorizontalL {
        margin-left: dpConvert($elementsMarginHorizontalS);
    }

    .newsandinformationtype_lineTwo {
        lines: 2;
        text-overflow: ellipsis;
    }
</style>

<script>
    const locales = {
        en: require('./i18n/en.js'),
        fi: require('./i18n/fi.js')
    }
    import configuration from '@system.configuration'
    import app from "@system.app"; //or var app = require("@system.app")
    import router from "@system.router"; //or var router = require("@system.router")
    import pkg from "@system.package"; //or var pkg = require("@system.package")
    import fetch from '@system.fetch'
    const localeObject = configuration.getLocale(); 
    const packageName = "com.ulusoyapps.pettracker"; // native app deployed on AppGallery
    let local = localeObject.language;
    const $i18n = new I18n({ locale: local, messages: locales, fallbackLocale: 'en' });
    const mainUri = "pettracker://pet-tracker.fi"; // Deeplink URI of our native app
    module.exports = {
        data: {
            isDataFetching: "false",
            petData: [],
            'dividings': ['newsandinformationtype_dividing', '', ''],
            i18n: $i18n
        },
        onInit: function () { 
            this.loadPetList()
        },
        onShow: function () {
            this.loadPetList()
        },
       loadPetList: function () {
           var self = this;
           this.isDataFetching = "true";
           fetch.fetch({
               url: "https://cardpettracker.herokuapp.com/petapp/petlist?nos=2",
               success: function (ret) { 
                   self.petData =  JSON.parse(ret.data)
                   self.isDataFetching = "false";
               },
               fail: function (data, code) {
                   console.log("handling fail, code=" + code);
                   self.isDataFetching = "false";
               },
           })
       },
        mainDivClick: function (msg) { // This function handles main div click event
            router.push({ uri: mainUri + "/track?param=" + msg }); 
        },
        imgClick: function (msg) { // This function handles image click event
            router.push({ uri: mainUri + "/heatmap/" + msg });
        },
        showApp: function () { // This function handles view more click event
            router.push({ uri: mainUri + "/home" });
        }
    }
    try {
        // This section will check if respective native app is installed or not
        app.getPackageInfo({ // if native app is not installed then redirection will be made to AppGallery
            packageName: packageName, // Target app package name.
            success: function (data) {// The app has been installed, but the version is incorrect. The system guides the user to HUAWEI AppGallery for installation.
                if (data.versionCode < data.deeplinkEnableVersionCode) {
                    router.push({ uri: "appmarket://details?id=" + packageName });
                }
            },
            fail: function (errormsg, errorcode) {// The app is not installed. The system guides the user to HUAWEI AppGallery for installation.
                router.push({ uri: "appmarket://details?id=" + packageName });
            }
        });
    } catch (error) {
        // Use the following logic when the engine version is earlier than 1060.
        pkg.hasInstalled({
            package: packageName,
            success: function (data) {
                // The interface is called successfully. 
                console.log("handling success: " + data.result);
            },
            fail: function (data, code) {
                // The app is not installed. The system guides the user to HUAWEI AppGallery for installation.
                router.push({ uri: "appmarket://details?id=" + packageName });
            }
        });
    }

</script>